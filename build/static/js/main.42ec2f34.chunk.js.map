{"version":3,"sources":["BooksAPI.js","BookShelf.js","Book.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","bookId","shelf","method","Object","objectSpread","Content-Type","body","JSON","stringify","catch","err","console","log","search","query","BookShelfSelect","props","react_default","a","createElement","onChange","handleBookShelfSelect","value","selected","disabled","Book","_ref","book","handleChange","className","style","width","height","backgroundImage","imageLinks","thumbnail","event","id","title","authors","debounce","fn","delay","timer","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","BooksApp","state","filteredBooks","showSearchPage","searchBooks","_callee","regenerator_default","wrap","_context","prev","next","BooksAPI","sent","_this","setState","stop","this","handleSearch","target","_ref2","asyncToGenerator","mark","_callee2","response","_context2","_x2","filterBooks","_this2","onClick","type","placeholder","map","Fragment","filter","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.42ec2f34.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (bookId, shelf) =>\n  fetch(`${api}/books/${bookId}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res =>\n      res.json()).catch(err => console.log(err))\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport './App.css'\n\nexport default function BookShelfSelect(props) {\n    return <select onChange={props.handleBookShelfSelect}>\n        <option value=\"move\" selected disabled>Move to...</option>\n        <option value=\"currentlyReading\">Currently Reading</option>\n        <option value=\"wantToRead\">Want to Read</option>\n        <option value=\"read\">Read</option>\n        <option value=\"none\">None</option>\n    </select>\n\n}","import React from 'react'\nimport './App.css'\nimport BookShelfSelect from './BookShelf'\n\nexport default function Book({book, handleChange}) {\n    return <div className=\"book\">\n        <div className=\"book-top\">\n            <div className=\"book-cover\" style={{\n                width: 128,\n                height: 193,\n                backgroundImage: `url(${book.imageLinks.thumbnail})`\n            }}>\n            </div>\n            <div className='book-shelf-changer'>\n                <BookShelfSelect handleBookShelfSelect={event => handleChange(book.id, event)}/>\n            </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{book.authors}</div>\n    </div>\n\n}","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Book from './Book'\n//import { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nconst debounce = (fn, delay) => {\n    let timer = null;\n    return (...args) => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(() => {\n            fn.apply(null, args)\n        }, delay);\n    };\n}\n\nclass BooksApp extends React.Component {\n    state = {\n        /**\n         * TODO: Instead of using this state variable to keep track of which page\n         * we're on, use the URL in the browser's address bar. This will ensure that\n         * users can use the browser's back and forward buttons to navigate between\n         * pages, as well as provide a good URL they can bookmark and share.\n         */\n        filteredBooks: [],\n        books: [],\n        showSearchPage: false\n    }\n\n    searchBooks = async (query) => {\n        const filteredBooks = await BooksAPI.search(query)\n       // if(query !== '') {\n            this.setState({filteredBooks})\n        //}\n    }\n\n    handleSearch = debounce(this.searchBooks, 500)\n\n    async componentDidMount() {\n        const books = await BooksAPI.getAll()\n        this.setState({books})\n        console.log(this.state.books)\n    }\n\n    handleChange = (id, event) => {\n        console.log('id', id, 'event', event.target.value)\n\n        BooksAPI.update(id, event.target.value).then(\n            async (response) => {\n                const books = await BooksAPI.getAll()\n                this.setState({books})\n                console.log(this.state.books)\n            }\n        )\n        console.log(this.state.response)\n    }\n\n    filterBooks = shelf => book => book.shelf === shelf;\n\n\n    render() {\n        return (\n            <div className=\"app\">\n                {this.state.showSearchPage ? (\n                    <div className=\"search-books\">\n                        <div className=\"search-books-bar\">\n\n                            <button className=\"close-search\"\n                                    onClick={() => this.setState({showSearchPage: false})}>Close\n                            </button>\n                            <div className=\"search-books-input-wrapper\">\n                                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n\n                  atatch even handler to seach input\n                  run debouncer\n                  search in the booksAPI\n                  display the books\n\n                */}\n                                <input type=\"text\" placeholder=\"Search by title or author\"\n                                       onChange={(event) => this.handleSearch(event.target.value)}/>\n\n                            </div>\n                        </div>\n                        <div className=\"bookshelf-books\">\n                            <ol className=\"books-grid\">\n\n                                {this.state.filteredBooks.map((book) =>\n                                    <>\n\n                                        <li>\n                                            <Book book={book} handleChange={this.handleChange}/>\n                                        </li>\n                                    </>\n                                )}\n                            </ol>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"list-books\">\n                        <div className=\"list-books-title\">\n                            <h1>MyReads</h1>\n                        </div>\n                        <div className=\"list-books-content\">\n                            <div>\n                                <div className=\"bookshelf\">\n                                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                                    <div className=\"bookshelf-books\">\n                                        <ol className=\"books-grid\">\n\n                                            {this.state.books.filter(this.filterBooks('currentlyReading')).map((book) =>\n                                                <>\n\n                                                    <li>\n                                                        <Book book={book} handleChange={this.handleChange}/>\n                                                    </li>\n                                                </>\n                                            )}\n                                        </ol>\n                                    </div>\n                                </div>\n                                <div className=\"bookshelf\">\n                                    <h2 className=\"bookshelf-title\">Want to Read</h2>\n                                    <div className=\"bookshelf-books\">\n                                        <ol className=\"books-grid\">\n                                            {this.state.books.filter(this.filterBooks('wantToRead')).map((book) =>\n                                                <>\n\n                                                    <li>\n                                                        <Book book={book} handleChange={this.handleChange}/>\n                                                    </li>\n\n                                                </>\n                                            )}\n                                        </ol>\n                                    </div>\n                                </div>\n                                <div className=\"bookshelf\">\n                                    <h2 className=\"bookshelf-title\">Read</h2>\n                                    <div className=\"bookshelf-books\">\n                                        <ol className=\"books-grid\">\n                                            {this.state.books.filter(this.filterBooks('read')).map((book) =>\n                                                <>\n\n                                                    <li>\n                                                        <Book book={book} handleChange={this.handleChange}/>\n                                                    </li>\n\n                                                </>\n                                            )}\n                                        </ol>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"open-search\">\n                            <button onClick={() => this.setState({showSearchPage: true})}>Add a book</button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}